// Generated by gencpp from file kortex_driver/ModeService.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_MODESERVICE_H
#define KORTEX_DRIVER_MESSAGE_MODESERVICE_H

#include <ros/service_traits.h>


#include <kortex_driver/ModeServiceRequest.h>
#include <kortex_driver/ModeServiceResponse.h>


namespace kortex_driver
{

struct ModeService
{

typedef ModeServiceRequest Request;
typedef ModeServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ModeService
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ModeService > {
  static const char* value()
  {
    return "939409827c5731ec5346c99677bd2a1d";
  }

  static const char* value(const ::kortex_driver::ModeService&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ModeService > {
  static const char* value()
  {
    return "kortex_driver/ModeService";
  }

  static const char* value(const ::kortex_driver::ModeService&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ModeServiceRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ModeService >
template<>
struct MD5Sum< ::kortex_driver::ModeServiceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ModeService >::value();
  }
  static const char* value(const ::kortex_driver::ModeServiceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ModeServiceRequest> should match
// service_traits::DataType< ::kortex_driver::ModeService >
template<>
struct DataType< ::kortex_driver::ModeServiceRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ModeService >::value();
  }
  static const char* value(const ::kortex_driver::ModeServiceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ModeServiceResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ModeService >
template<>
struct MD5Sum< ::kortex_driver::ModeServiceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ModeService >::value();
  }
  static const char* value(const ::kortex_driver::ModeServiceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ModeServiceResponse> should match
// service_traits::DataType< ::kortex_driver::ModeService >
template<>
struct DataType< ::kortex_driver::ModeServiceResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ModeService >::value();
  }
  static const char* value(const ::kortex_driver::ModeServiceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_MODESERVICE_H
