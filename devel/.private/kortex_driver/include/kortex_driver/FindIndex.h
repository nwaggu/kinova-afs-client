// Generated by gencpp from file kortex_driver/FindIndex.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_FINDINDEX_H
#define KORTEX_DRIVER_MESSAGE_FINDINDEX_H

#include <ros/service_traits.h>


#include <kortex_driver/FindIndexRequest.h>
#include <kortex_driver/FindIndexResponse.h>


namespace kortex_driver
{

struct FindIndex
{

typedef FindIndexRequest Request;
typedef FindIndexResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct FindIndex
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::FindIndex > {
  static const char* value()
  {
    return "dc335e982131613152f901a4d2b0914b";
  }

  static const char* value(const ::kortex_driver::FindIndex&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::FindIndex > {
  static const char* value()
  {
    return "kortex_driver/FindIndex";
  }

  static const char* value(const ::kortex_driver::FindIndex&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::FindIndexRequest> should match
// service_traits::MD5Sum< ::kortex_driver::FindIndex >
template<>
struct MD5Sum< ::kortex_driver::FindIndexRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::FindIndex >::value();
  }
  static const char* value(const ::kortex_driver::FindIndexRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::FindIndexRequest> should match
// service_traits::DataType< ::kortex_driver::FindIndex >
template<>
struct DataType< ::kortex_driver::FindIndexRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::FindIndex >::value();
  }
  static const char* value(const ::kortex_driver::FindIndexRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::FindIndexResponse> should match
// service_traits::MD5Sum< ::kortex_driver::FindIndex >
template<>
struct MD5Sum< ::kortex_driver::FindIndexResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::FindIndex >::value();
  }
  static const char* value(const ::kortex_driver::FindIndexResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::FindIndexResponse> should match
// service_traits::DataType< ::kortex_driver::FindIndex >
template<>
struct DataType< ::kortex_driver::FindIndexResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::FindIndex >::value();
  }
  static const char* value(const ::kortex_driver::FindIndexResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_FINDINDEX_H
